version: 0.2
env:
  variables:
    AWS_DEFAULT_REGION: us-east-1
    IMAGE_REPO_NAME: lab2-frontend

phases:
  pre_build:
    commands:
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REPO_URI="${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${REPO_URI}
      - COMMIT=${CODEBUILD_RESOLVED_SOURCE_VERSION:-latest}
      - IMAGE_TAG=$(echo $COMMIT | cut -c1-7)

  build:
    commands:
      - set -euo pipefail
      - echo "== CONTENIDO RAÍZ ==" && ls -lah | sed -n '1,200p'
      - echo "== .dockerignore ==" && (cat .dockerignore || echo "(no existe)")
      # Build súper verboso para ver el paso exacto que falla
      - DOCKER_BUILDKIT=0 docker build --pull --no-cache --progress=plain \
          -t ${REPO_URI}:${IMAGE_TAG} -t ${REPO_URI}:latest .

  post_build:
    commands:
      - docker push ${REPO_URI}:${IMAGE_TAG}
      - docker push ${REPO_URI}:latest
      - printf '[{"name":"app","imageUri":"%s"}]' "${REPO_URI}:${IMAGE_TAG}" > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
